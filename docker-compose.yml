services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ecommerce
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  test_db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test_ecommerce
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ecommerce
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - TEST_POSTGRES_USER=postgres
      - TEST_POSTGRES_PASSWORD=postgres
      - TEST_POSTGRES_DB=test_ecommerce
      - TEST_POSTGRES_HOST=test_db
      - TEST_POSTGRES_PORT=5432
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
      test_db:
        condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: 